GET http://localhost:8080/topjava/rest/meals
Accept: application/json

> {%
client.test("Get all", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json");
})%}

###

GET http://localhost:8080/topjava/rest/meals/100003
Accept: application/json

> {%
client.test("Get with id = 100003", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json");
})%}

###

DELETE http://localhost:8080/topjava/rest/meals/100004
Accept: application/json

> {%
client.test("Delete with id = 100004", function() {
  client.assert(response.status === 204, "Response status is not 204");
})%}

###

GET http://localhost:8080/topjava/rest/meals/filter
Accept: application/json

> {%
client.test("Get with null filters", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json");
})%}

###

GET http://localhost:8080/topjava/rest/meals/filter?startDate=2020-01-30&endDate=2020-01-30&startTime=11:00:00&endTime=23:00:00
Accept: application/json

> {%
client.test("Get with filters", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json");
})%}

###

POST http://localhost:8080/topjava/rest/meals
Content-Type: application/json

{
  "dateTime": [
    2020,
    2,
    1,
    18,
    0,
    0
  ],
  "description": "Созданный ужин",
  "calories": 300
}

> {%
client.test("Create new", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.contentType.mimeType === "application/json");
})%}

###

PUT http://localhost:8080/topjava/rest/meals/100005
Content-Type: application/json

{
  "dateTime": [
    2020,
    2,
    1,
    10,
    0,
    0
  ],
  "description": "Созданный ужин",
  "calories": 300
}

> {%
client.test("Update with id = 100003", function() {
  client.assert(response.status === 204, "Response status is not 204");
})%}

###



